package com.greendao.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.simba.membercenter.DB.AccountBean;
import com.simba.membercenter.DB.DeviceStateBean;
import com.simba.membercenter.DB.MessageBean;

import com.greendao.gen.AccountBeanDao;
import com.greendao.gen.DeviceStateBeanDao;
import com.greendao.gen.MessageBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig accountBeanDaoConfig;
    private final DaoConfig deviceStateBeanDaoConfig;
    private final DaoConfig messageBeanDaoConfig;

    private final AccountBeanDao accountBeanDao;
    private final DeviceStateBeanDao deviceStateBeanDao;
    private final MessageBeanDao messageBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        accountBeanDaoConfig = daoConfigMap.get(AccountBeanDao.class).clone();
        accountBeanDaoConfig.initIdentityScope(type);

        deviceStateBeanDaoConfig = daoConfigMap.get(DeviceStateBeanDao.class).clone();
        deviceStateBeanDaoConfig.initIdentityScope(type);

        messageBeanDaoConfig = daoConfigMap.get(MessageBeanDao.class).clone();
        messageBeanDaoConfig.initIdentityScope(type);

        accountBeanDao = new AccountBeanDao(accountBeanDaoConfig, this);
        deviceStateBeanDao = new DeviceStateBeanDao(deviceStateBeanDaoConfig, this);
        messageBeanDao = new MessageBeanDao(messageBeanDaoConfig, this);

        registerDao(AccountBean.class, accountBeanDao);
        registerDao(DeviceStateBean.class, deviceStateBeanDao);
        registerDao(MessageBean.class, messageBeanDao);
    }
    
    public void clear() {
        accountBeanDaoConfig.clearIdentityScope();
        deviceStateBeanDaoConfig.clearIdentityScope();
        messageBeanDaoConfig.clearIdentityScope();
    }

    public AccountBeanDao getAccountBeanDao() {
        return accountBeanDao;
    }

    public DeviceStateBeanDao getDeviceStateBeanDao() {
        return deviceStateBeanDao;
    }

    public MessageBeanDao getMessageBeanDao() {
        return messageBeanDao;
    }

}
